process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        enabled: true,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    
    withName: GABI_SUMMARY {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GABI_REPORT {
        publishDir = [
            path: { "${params.outdir}/reports/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: PROKKA {
        ext.args = "--force"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/annotation/prokka" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: DOWNLOAD_GENOME {
        publishDir = [
            path: { "${params.outdir}/refgenomes" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: KRAKEN2_KRAKEN2 {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/taxonomy/kraken2" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_INDEX|SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bam" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SAMTOOLS_MERGE {
       publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bam" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    withName: 'BWAMEM2_MEM|BWAMEM2_INDEX' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bwamem" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MOSDEPTH {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/mosdepth" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'ECTYPER|SEQSERO2|LISSERO|SISTR|STECFINDER' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/serotype/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'STECFINDER' {
        ext.args = "--hits"
    }
    withName: 'SNIPPY_RUN' {
        ext.prefix = "snippy"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/variants/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'TABIX_TABIX|BCFTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/variants/${meta.sample_id}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: AMRFINDERPLUS_RUN {
        ext.args = [
            "--ident_min ${params.arg_amrfinderplus_identmin}",
            "--coverage_min ${params.arg_amrfinderplus_coveragemin}",
            "--translation_table ${params.arg_amrfinderplus_translationtable}",
            params.arg_amrfinderplus_plus ? '--plus' : '',
            params.arg_amrfinderplus_name ? '--name ${meta.sample_id}' : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/amr/amrfinderplus" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HAMRONIZATION_AMRFINDERPLUS {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/amr/amrfinderplus" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.sample_id}.amrfinderplus" }
    }
    withName: ABRICATE_RUN {
        ext.args =  [
            "--minid ${params.arg_abricate_minid}",
            "--mincov ${params.arg_abricate_mincov}"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/amr/abricate/${db}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: ABRICATE_RUN_ECOLI_VIRULENCE {
       ext.args =  [
            "--minid ${params.arg_abricate_minid}",
            "--mincov ${params.arg_abricate_mincov}"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/amr/abricate/${db}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    withName: HAMRONIZATION_ABRICATE {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/amr/abricate" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.sample_id}.abricate" }
    }
    withName: HAMRONIZATION_SUMMARIZE {
        publishDir = [
            path: { "${params.outdir}/AMR" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/minimap2/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CAT_FASTQ {
        publishDir = [
            path: { "${params.outdir}/cat" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/custom" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: MOBSUITE_RECON {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/plasmids" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: AMRFINDERPLUS_INSTALL {
        publishDir = [
            path: { "${params.reference_base}/gabi/${params.reference_version}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SOURMASH_SEARCH' {
        ext.args = "--best-only"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/sourmash" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SOURMASH_SKETCH' {
        ext.args = "dna -p scaled=1000,k=31,k=21"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/sourmash" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


}
