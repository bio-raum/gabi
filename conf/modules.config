process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        enabled: true,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: MULTIQC {
        ext.prefix = "${params.run_name}_multiqc"
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'GABI_QC' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'GABI_SUMMARY' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/json" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GABI_REPORT {
        publishDir = [
            path: { "${params.outdir}/reports/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: PROKKA {
        ext.args = "--force"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/annotation/prokka" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: DOWNLOAD_GENOME {
        publishDir = [
            path: { "${params.outdir}/refgenomes" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'KRAKEN2_KRAKEN2|BRACKEN_BRACKEN' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/taxonomy/kraken2" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_INDEX|SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bam/${meta.platform}" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SAMTOOLS_MERGE {
       publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bam" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    withName: 'BWAMEM2_MEM|BWAMEM2_INDEX' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/bwamem" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MOSDEPTH {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/mosdepth" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'SNIPPY_RUN' {
        ext.prefix = "snippy"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/variants/" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'TABIX_TABIX|TABIX_BGZIP|BCFTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/variants/snippy" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
 
    withName: MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/minimap2/" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CAT_FASTQ {
        publishDir = [
            path: { "${params.outdir}/cat" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/custom" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: MOBSUITE_RECON {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/plasmids" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SOURMASH_SEARCH' {
        ext.args = "--best-only"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/sourmash" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SOURMASH_SKETCH' {
        ext.args = "dna -p scaled=1000,k=31,k=21"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/sourmash" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MEDAKA_VARIANT {
        ext.args = [
            params.medaka_model ? "-m ${params.medaka_model}" : ""
        ].join(" ")
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/variants" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: STAGE_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


}
