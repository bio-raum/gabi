process {
    withName: MULTIQC_ILLUMINA {
        ext.prefix = "multiqc_illumina_${params.run_name}"
        publishDir = [
            path: { "${params.outdir}/reports/Illumina" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MULTIQC_NANOPORE {
        ext.prefix = "multiqc_nanopore_${params.run_name}"
        publishDir = [
            path: { "${params.outdir}/reports/Nanopore" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MULTIQC_PACBIO {
        ext.prefix = "multiqc_pacbio_${params.run_name}"
        publishDir = [
            path: { "${params.outdir}/reports/Pacbio" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'CONFINDR' {
        ext.args = "-m 50 --cross_details" 
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'CONFINDR2MQC|CONFINDR2MQC_SUMMARY' {
        publishDir = [
            path: { "${params.outdir}/qc" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'CONFINDR2JSON' {
       publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/confindr_results" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    withName: FASTQC {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/fastqc" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: PORECHOP_ABI {
        ext.args = "--abi"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/porechop" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CHOPPER {
        ext.args2 = [
            "-l ${params.ont_min_length}",
            params.ont_min_q ? "-q ${params.ont_min_q}" : ""
        ].join(' ').trim()
         publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/chopper" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    
    }
    withName: NANOPLOT {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/nanoplot" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: FASTP {
        ext.args = "-l 35 -n 50"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/fastp" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.contains('.json') ? filename : null }
        ]
    }
    withName: SEQKIT_REPLACE {
        ext.args = "-p \"\\t\" -r \" \""
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/kmc" },
            mode: params.publish_dir_mode,
            enabled: false,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: KMC {
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/qc/kmc" },
            mode: params.publish_dir_mode,
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: RASUSA {
        ext.args = [
            "--coverage ${params.max_coverage}",
            params.random_seed ? "-s ${params.random_seed}" : ""
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/rasusa" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }
    withName: BIOBLOOM_CATEGORIZER {
        ext.args = "-g -n --fq"
        publishDir = [
            path: { "${params.outdir}/samples/${meta.sample_id}/biobloom" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

}