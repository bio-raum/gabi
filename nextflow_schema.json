{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/bio-raum/gabi//nextflow_schema.json",
  "title": "bio-raum/gabi pipeline parameters",
  "description": "GABI Pipeline for assembly and profiling of bacterial isolates",
  "type": "object",
  "$defs": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["input", "outdir", "run_name"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_input.json",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Path to comma-separated file containing information about the samples in the experiment.",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open",
          "default": "results"
        },
        "build_references": {
          "type": "boolean",
          "description": "Optional workflow to download and format the reference databases"
        },
        "run_name": {
          "type": "string",
          "description": "A descriptive name for this pipeline run"
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "reference_version": {
          "type": "integer",
          "default": 1,
          "hidden": true
        },
        "reference_base": {
          "type": "string",
          "description": "Location where the reference have been installed to"
        },
        "random_seed": {
          "type": "string",
          "hidden": true
        },
        "report_refs": {
          "type": "string",
          "default": "/home/marc/git/bio-raum/gabi/assets/AQUAMIS_thresholds.json",
          "hidden": true
        },
        "fast_ref": {
          "type": "boolean",
          "description": "Perform a faster version of the reference assembly matching (less accurate)"
        },
        "max_contigs": {
          "type": "integer",
          "default": 150,
          "hidden": true
        },
        "confindr_db": {
          "type": "string",
          "description": "Location of a custom confindR database"
        },
        "remove_host": {
          "type": "boolean",
          "description": "Remove host DNA from reads (Horse)"
        },
        "max_coverage": {
          "type": "string",
          "default": "100x",
          "description": "Maximum coverage to downsample reads to"
        }
      }
    },
    "illumina_options": {
      "title": "Illumina options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "min_contig_len": {
          "type": "integer",
          "default": 300,
          "description": "Minimum length of a contig to be kept in assembly"
        },
        "shovill_assembler": {
          "type": "string",
          "default": "spades",
          "description": "Assembler to use with Shovill (skesa, velvet, megahit or spades)"
        },
        "unicycler": {
          "type": "boolean",
          "description": "Use unicycler instead of Shovill"
        }
      }
    },
    "nanopore_options": {
      "title": "Nanopore options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "homopolish_model": {
          "type": "string",
          "default": "R10",
          "description": "Which homopolish model to use (R9, R10)"
        },
        "medaka_model": {
          "type": "string",
          "description": "The applieed basecalling model (only needed for older data)"
        },
        "onthq": {
          "type": "boolean",
          "description": "Reads were produced with SUP base calling and are mostly Q20"
        },
        "ont_min_length": {
          "type": "integer",
          "default": 5000,
          "description": "Minimum length of ONT reads to keep"
        },
        "ont_min_q": {
          "type": "integer",
          "default": 10,
          "description": "Minimum quality of ONT reads to keep (Q)"
        },
        "ont_min_reads": {
          "type": "integer",
          "default": 1000,
          "description": "Minimum number of reads to remain after trimming"
        },
        "skip_homopolish": {
          "type": "boolean",
          "description": "Do not perform homopolishing"
        },
        "skip_porechop": {
          "type": "boolean",
          "default": true,
          "description": "Do not perform adapter trimming with Porechop"
        }
      }
    },
    "optional_steps": {
      "title": "Optional steps",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "skip_failed": {
          "type": "boolean",
          "hidden": true
        },
        "skip_report": {
          "type": "boolean",
          "description": "Do not generate final HTML report (debugging only)"
        },
        "skip_optional": {
          "type": "boolean",
          "description": "Skip all optional analyses beyond the assembly"
        },
        "skip_annotation": {
          "type": "boolean",
          "description": "Skip assembly annotation"
        },
        "skip_circos": {
          "type": "boolean",
          "description": "Skip generation of circos plots"
        },
        "skip_mlst": {
          "type": "boolean",
          "description": "Skip prediction of MLST types"
        },
        "skip_serotyping": {
          "type": "boolean",
          "description": "Skip prediction of serotypes"
        },
        "skip_amr": {
          "type": "boolean",
          "description": "Skip AMD prediction"
        },
        "skip_variants": {
          "type": "boolean",
          "description": "Skip variant calling"
        },
        "skip_multiqc": {
          "type": "boolean",
          "hidden": true
        }
      }
    },
    "databases_and_tools": {
      "title": "Databases and tools",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "amrfinderplus_db": {
          "type": "string",
          "hidden": true
        },
        "arg_amrfinderplus_identmin": {
          "type": "integer",
          "default": -1,
          "description": "Minimum identity for amrfinder to consider a hit"
        },
        "arg_amrfinderplus_coveragemin": {
          "type": "number",
          "default": 0.5,
          "description": "Minimum coverage for amrrinder to consider a hit"
        },
        "arg_amrfinderplus_translationtable": {
          "type": "integer",
          "default": 11,
          "description": "Translation table to be used by amrfinder",
          "hidden": true
        },
        "arg_amrfinderplus_plus": {
          "type": "boolean",
          "hidden": true
        },
        "arg_amrfinderplus_name": {
          "type": "boolean",
          "hidden": true
        },
        "arg_hamronization_summarizeformat": {
          "type": "string",
          "default": "tsv",
          "hidden": true
        },
        "arg_abricate_minid": {
          "type": "integer",
          "default": 80,
          "description": "Minimum id required by abricate"
        },
        "arg_abricate_mincov": {
          "type": "integer",
          "default": 80,
          "description": "Minimum coverage required by abricate"
        },
        "abricate_dbs": {
          "type": "string",
          "default": "['vfdb']",
          "hidden": true
        },
        "prokka_proteins": {
          "type": "string",
          "hidden": true
        },
        "prokka_prodigal": {
          "type": "string",
          "hidden": true
        },
        "busco_lineage": {
          "type": "string",
          "default": "bacteria",
          "hidden": true
        },
        "busco_db_path": {
          "type": "string",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/input_output_options"
    },
    {
      "$ref": "#/$defs/generic_options"
    },
    {
      "$ref": "#/$defs/illumina_options"
    },
    {
      "$ref": "#/$defs/nanopore_options"
    },
    {
      "$ref": "#/$defs/optional_steps"
    },
    {
      "$ref": "#/$defs/databases_and_tools"
    }
  ],
  "properties": {
    "logo": {
      "type": "string",
      "default": "/home/marc/git/bio-raum/gabi/assets/pipelinelogo.png",
      "hidden": true
    },
    "multiqc_config": {
      "type": "string",
      "default": "/home/marc/git/bio-raum/gabi/conf/multiqc_config.yaml",
      "hidden": true
    },
    "multiqc_logo": {
      "type": "string",
      "default": "/home/marc/git/bio-raum/gabi/assets/pipelinelogo.png",
      "hidden": true
    },
    "template": {
      "type": "string",
      "default": "/home/marc/git/bio-raum/gabi/assets/gabi_template.html",
      "hidden": true
    },
    "publish_dir_mode": {
      "type": "string",
      "default": "copy",
      "hidden": true
    },
    "custom_config_base": {
      "type": "string",
      "default": "https://raw.githubusercontent.com/bio-raum/nf-configs/main",
      "hidden": true
    }
  }
}
